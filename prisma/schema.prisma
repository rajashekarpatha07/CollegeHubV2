// This is the final Prisma schema file.
// It includes the many-to-many relationship for Subjects and Branches.
// It also includes updated fields for file management (e.g., Cloudinary).

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ================================================================= //
//                            CORE MODELS                            //
// ================================================================= //

model Student {
  roll_number String @id @db.VarChar(50)
  name        String @db.VarChar(100)
  email       String @unique @db.VarChar(100)
  password    String @db.VarChar(255) // Should be a hashed password
  batch       Int
  semester    Int

  // Relation to Branch
  branch_code String @db.VarChar(10)
  branch      Branch @relation(fields: [branch_code], references: [branch_code])
}

model Faculty {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(100)
  email           String          @unique @db.VarChar(100)
  password        String          @db.VarChar(255) // Should be a hashed password
  materials       Material[]
  question_papers QuestionPaper[]
  announcements   Announcement[]
}

model Branch {
  branch_code String          @id @db.VarChar(10)
  branch_name String          @unique @db.VarChar(100)
  subjects    BranchSubject[]
  students    Student[]
}

model Subject {
  subject_code    String          @id @db.VarChar(10)
  subject_name    String          @db.VarChar(100)
  semester        Int
  branches        BranchSubject[]
  materials       Material[]
  question_papers QuestionPaper[]
}

// Join table for the many-to-many relationship between Branch and Subject
model BranchSubject {
  branch_code String @db.VarChar(10)
  branch      Branch @relation(fields: [branch_code], references: [branch_code])

  subject_code String @db.VarChar(10)
  subject      Subject @relation(fields: [subject_code], references: [subject_code])

  @@id([branch_code, subject_code])
}


// ================================================================= //
//                           CONTENT MODELS                          //
// ================================================================= //

model Material {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  description  String?  @db.Text
  file_url     String   @db.VarChar(255) // URL from a service like Cloudinary
  public_id    String   @db.VarChar(255) // The ID from Cloudinary for managing the file
  file_type    String   @db.VarChar(50)  // e.g., 'image', 'pdf', 'video'
  upload_date  DateTime @default(now())
  subject_code String   @db.VarChar(10)
  semester     Int      
  subject      Subject  @relation(fields: [subject_code], references: [subject_code])
  faculty_id   Int
  faculty      Faculty  @relation(fields: [faculty_id], references: [id])
}

model QuestionPaper {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  exam_year    Int
  file_url     String   @db.VarChar(255) // URL from a service like Cloudinary
  public_id    String   @db.VarChar(255) // The ID from Cloudinary for managing the file
  file_type    String   @db.VarChar(50)  // e.g., 'pdf', 'docx'
  upload_date  DateTime @default(now())
  subject_code String   @db.VarChar(10)
  subject      Subject  @relation(fields: [subject_code], references: [subject_code])
  faculty_id   Int
  faculty      Faculty  @relation(fields: [faculty_id], references: [id])
}

model Announcement {
  id                 Int      @id @default(autoincrement())
  title              String   @db.VarChar(255)
  content            String   @db.Text
  post_date          DateTime @default(now())
  faculty_id         Int
  faculty            Faculty  @relation(fields: [faculty_id], references: [id])
  target_branch_code String?  @db.VarChar(10)
  target_batch       Int?
}